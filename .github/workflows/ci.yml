name: CI/CD Pipeline

# セキュリティ強化: デフォルトの権限を読み取り専用に制限
# Security Enhancement: Restrict default permissions to read-only
permissions:
  contents: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run linter
      run: npm run lint
      
    - name: Run type check
      run: npm run type-check
      
    - name: Run unit tests
      run: npm run test:ci
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        # The token is not required for public repositories on GitHub Actions.
        # For private repositories, set the CODECOV_TOKEN secret.
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        fail_ci_if_error: false
      
    - name: Build application
      run: npm run build
      
    - name: Test static export
      run: npm run build:static
      env:
        STATIC_EXPORT: true
        NEXT_PUBLIC_BASE_PATH: /slideshow-html

  security:
    runs-on: ubuntu-latest
    needs: test # テストが成功した後に実行 (Run after tests succeed)
    
    # Add permissions for CodeQL to write security events
    permissions:
      contents: read # To checkout the code
      security-events: write # To upload CodeQL results
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run security audit for dependencies
      run: npm audit --audit-level=high
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: typescript
        
    - name: Autobuild for CodeQL
      uses: github/codeql-action/autobuild@v3
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [test, security]
    permissions:
      contents: write # プレビューデプロイのための書き込み権限 (Write permission for preview deployment)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Build static export
      run: npm run build:static
      env:
        STATIC_EXPORT: true
        NEXT_PUBLIC_BASE_PATH: /slideshow-html
      
    - name: Deploy to GitHub Pages (Preview)
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./out
        destination_dir: pr-${{ github.event.number }}
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test, security]
    environment:
      name: production
    permissions:
      contents: write # 本番デプロイのための書き込み権限 (Write permission for production deployment)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Build static export
      run: npm run build:static
      env:
        STATIC_EXPORT: true
        NEXT_PUBLIC_BASE_PATH: /slideshow-html
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./out
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'